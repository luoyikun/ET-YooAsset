//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace ET.cfg.UnitConfig
{

public sealed partial class UnitBaseConfig :  Bright.Config.BeanBase 
{
    public UnitBaseConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);SkillList = new System.Collections.Generic.List<int>(n);for(var i = 0 ; i < n ; i++) { int _e;  _e = _buf.ReadInt(); SkillList.Add(_e);}}
        AttributeConfigId = _buf.ReadInt();
        PostInit();
    }

    public static UnitBaseConfig DeserializeUnitBaseConfig(ByteBuf _buf)
    {
        return new UnitConfig.UnitBaseConfig(_buf);
    }

    /// <summary>
    /// Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 英雄名
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 技能列表
    /// </summary>
    public System.Collections.Generic.List<int> SkillList { get; private set; }
    public System.Collections.Generic.List<SkillConfig.SkillCanvasConfig> SkillList_Ref { get; private set; }
    /// <summary>
    /// 属性配置Id
    /// </summary>
    public int AttributeConfigId { get; private set; }
    public UnitConfig.UnitAttributeConfig AttributeConfigId_Ref { get; private set; }

    public const int __ID__ = 1038474015;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        { SkillConfig.TbSkillCanvas __table = (SkillConfig.TbSkillCanvas)_tables["SkillConfig.TbSkillCanvas"]; this.SkillList_Ref = new System.Collections.Generic.List<SkillConfig.SkillCanvasConfig>(); foreach(var __e in SkillList) { this.SkillList_Ref.Add(__table.GetOrDefault(__e)); } }
        this.AttributeConfigId_Ref = (_tables["UnitConfig.TbUnitAttribute"] as UnitConfig.TbUnitAttribute).GetOrDefault(AttributeConfigId);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "SkillList:" + Bright.Common.StringUtil.CollectionToString(SkillList) + ","
        + "AttributeConfigId:" + AttributeConfigId + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
